services:
  nginx:
    container_name: ${APP_NAME}-nginx
    image: nginx:1.27.3-alpine
    networks:
      - web_network
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./public:/var/www/public
      - ./docker/nginx/prod:/etc/nginx/conf.d/
      - icons_data:/var/www/public/icons
      - uploads_data:/var/www/public/storage
#      - /etc/letsencrypt:/etc/letsencrypt:ro

  app:
    container_name: ${APP_NAME}-app
    build:
      context: ./
      dockerfile: ./docker/php/prod.Dockerfile
#    image: ${DOCKER_USERNAME}/${APP_NAME}:app-${COMMIT_TAG}
    volumes:
      - ./public:/var/www/public
      - icons_data:/var/www/storage/data/icons
      - uploads_data:/var/www/storage/app/public
    env_file:
      - .env
    networks:
      - db_network
      - web_network
    depends_on:
      - pgsql

  pgsql:
    container_name: ${APP_NAME}-pgsql
    image: 'postgres:17-alpine'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - 'pgsql_data:/var/lib/postgresql/data'
    networks:
      - db_network
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s

networks:
  db_network:
    internal: true
  web_network:
volumes:
  pgsql_data:
  uploads_data:
  icons_data:
